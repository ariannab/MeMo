[
  {
    "signature": "writeTo(org.elasticsearch.common.io.stream.StreamOutput out)",
    "name": "writeTo",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder",
      "name": "SuggestionBuilder",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.elasticsearch.common.io.stream.StreamOutput",
          "name": "StreamOutput",
          "isArray": false
        },
        "name": "out"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "org.elasticsearch.search.suggest.SuggestionBuilder(org.elasticsearch.common.io.stream.StreamInput in)",
    "name": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder",
      "name": "SuggestionBuilder",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.elasticsearch.common.io.stream.StreamInput",
          "name": "StreamInput",
          "isArray": false
        },
        "name": "in"
      }
    ],
    "equivalence": {
      "comment": "Read from a stream.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "prefix(java.lang.String prefix)",
    "name": "prefix",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder",
      "name": "SuggestionBuilder",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "prefix"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "fromXContent(org.elasticsearch.common.xcontent.XContentParser parser)",
    "name": "fromXContent",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder",
      "name": "SuggestionBuilder",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder<?>",
      "name": "org.elasticsearch.search.suggest.SuggestionBuilder<?>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.elasticsearch.common.xcontent.XContentParser",
          "name": "XContentParser",
          "isArray": false
        },
        "name": "parser"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toXContent(org.elasticsearch.common.xcontent.XContentBuilder builder, org.elasticsearch.common.xcontent.ToXContent$Params params)",
    "name": "toXContent",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder",
      "name": "SuggestionBuilder",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.elasticsearch.common.xcontent.XContentBuilder",
      "name": "org.elasticsearch.common.xcontent.XContentBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.elasticsearch.common.xcontent.XContentBuilder",
          "name": "XContentBuilder",
          "isArray": false
        },
        "name": "builder"
      },
      {
        "type": {
          "qualifiedName": "org.elasticsearch.common.xcontent.ToXContent$Params",
          "name": "Params",
          "isArray": false
        },
        "name": "params"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "shardSize()",
    "name": "shardSize",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder",
      "name": "SuggestionBuilder",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Integer",
      "name": "java.lang.Integer",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "get the #shardSize() parameter",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "org.elasticsearch.search.suggest.SuggestionBuilder(java.lang.String field)",
    "name": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder",
      "name": "SuggestionBuilder",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "field"
      }
    ],
    "equivalence": {
      "comment": "Creates a new suggestion.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "size(int size)",
    "name": "size",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder",
      "name": "SuggestionBuilder",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "size"
      }
    ],
    "equivalence": {
      "comment": "Sets the maximum suggestions to be returned per suggest text term.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "doWriteTo(org.elasticsearch.common.io.stream.StreamOutput out)",
    "name": "doWriteTo",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder",
      "name": "SuggestionBuilder",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.elasticsearch.common.io.stream.StreamOutput",
          "name": "StreamOutput",
          "isArray": false
        },
        "name": "out"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "analyzer()",
    "name": "analyzer",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder",
      "name": "SuggestionBuilder",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "get the #analyzer() parameter",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "populateCommonFields(org.elasticsearch.index.mapper.MapperService mapperService, org.elasticsearch.search.suggest.SuggestionSearchContext$SuggestionContext suggestionContext)",
    "name": "populateCommonFields",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder",
      "name": "SuggestionBuilder",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.elasticsearch.index.mapper.MapperService",
          "name": "MapperService",
          "isArray": false
        },
        "name": "mapperService"
      },
      {
        "type": {
          "qualifiedName": "org.elasticsearch.search.suggest.SuggestionSearchContext$SuggestionContext",
          "name": "SuggestionContext",
          "isArray": false
        },
        "name": "suggestionContext"
      }
    ],
    "equivalence": {
      "comment": "Transfers the text, prefix, regex, analyzer, field, size and shard size settings from the original SuggestionBuilder to the target SuggestionContext",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "org.elasticsearch.search.suggest.SuggestionBuilder(java.lang.String field, org.elasticsearch.search.suggest.SuggestionBuilder<?> in)",
    "name": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder",
      "name": "SuggestionBuilder",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "field"
      },
      {
        "type": {
          "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder",
          "name": "SuggestionBuilder",
          "isArray": false
        },
        "name": "in"
      }
    ],
    "equivalence": {
      "comment": "internal copy constructor that copies over all class fields from second SuggestionBuilder except field name.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "regex(java.lang.String regex)",
    "name": "regex",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder",
      "name": "SuggestionBuilder",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "regex"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "analyzer(java.lang.String analyzer)",
    "name": "analyzer",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder",
      "name": "SuggestionBuilder",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "analyzer"
      }
    ],
    "equivalence": {
      "comment": "Sets the analyzer to analyse to suggest text with. Defaults to the search analyzer of the suggest field.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "doHashCode()",
    "name": "doHashCode",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder",
      "name": "SuggestionBuilder",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "HashCode for the subclass of SuggestionBuilder to implement.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "prefix()",
    "name": "prefix",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder",
      "name": "SuggestionBuilder",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "get the prefix for this suggestion",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "field()",
    "name": "field",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder",
      "name": "SuggestionBuilder",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "get the #field() parameter",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "innerToXContent(org.elasticsearch.common.xcontent.XContentBuilder builder, org.elasticsearch.common.xcontent.ToXContent$Params params)",
    "name": "innerToXContent",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder",
      "name": "SuggestionBuilder",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.elasticsearch.common.xcontent.XContentBuilder",
      "name": "org.elasticsearch.common.xcontent.XContentBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.elasticsearch.common.xcontent.XContentBuilder",
          "name": "XContentBuilder",
          "isArray": false
        },
        "name": "builder"
      },
      {
        "type": {
          "qualifiedName": "org.elasticsearch.common.xcontent.ToXContent$Params",
          "name": "Params",
          "isArray": false
        },
        "name": "params"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "text()",
    "name": "text",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder",
      "name": "SuggestionBuilder",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "get the text for this suggestion",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "shardSize(java.lang.Integer shardSize)",
    "name": "shardSize",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder",
      "name": "SuggestionBuilder",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Integer",
          "name": "Integer",
          "isArray": false
        },
        "name": "shardSize"
      }
    ],
    "equivalence": {
      "comment": "Sets the maximum number of suggested term to be retrieved from each individual shard. During the reduce phase the only the top N suggestions are returned based on the size option. Defaults to the size option.  Setting this to a value higher than the `size` can be useful in order to get a more accurate document frequency for suggested terms. Due to the fact that terms are partitioned amongst shards, the shard level document frequencies of suggestions may not be precise. Increasing this will make these document frequencies more precise.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "doEquals(T other)",
    "name": "doEquals",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder",
      "name": "SuggestionBuilder",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder",
          "name": "SuggestionBuilder",
          "isArray": false
        },
        "name": "other"
      }
    ],
    "equivalence": {
      "comment": "Indicates whether some other SuggestionBuilder of the same type is \"equal to\" this one.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "text(java.lang.String text)",
    "name": "text",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder",
      "name": "SuggestionBuilder",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "text"
      }
    ],
    "equivalence": {
      "comment": "Same as in SuggestBuilder#setGlobalText(String), but in the suggestion scope.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "equals(java.lang.Object obj)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder",
      "name": "SuggestionBuilder",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "obj"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "hashCode()",
    "name": "hashCode",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder",
      "name": "SuggestionBuilder",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "regex()",
    "name": "regex",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder",
      "name": "SuggestionBuilder",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "get the regex for this suggestion",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "size()",
    "name": "size",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder",
      "name": "SuggestionBuilder",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Integer",
      "name": "java.lang.Integer",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "get the #size() parameter",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "build(org.elasticsearch.index.query.QueryShardContext context)",
    "name": "build",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.search.suggest.SuggestionBuilder",
      "name": "SuggestionBuilder",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.search.suggest.SuggestionBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.elasticsearch.search.suggest.SuggestionSearchContext$SuggestionContext",
      "name": "org.elasticsearch.search.suggest.SuggestionSearchContext$SuggestionContext",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.elasticsearch.index.query.QueryShardContext",
          "name": "QueryShardContext",
          "isArray": false
        },
        "name": "context"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  }
]