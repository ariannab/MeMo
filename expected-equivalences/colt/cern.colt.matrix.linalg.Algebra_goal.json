[
  {
    "signature": "cern.colt.matrix.linalg.Algebra()",
    "name": "cern.colt.matrix.linalg.Algebra",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "parameters": [],
    "equivalence": {
      "member": "cern.colt.matrix.linalg.Algebra()",
      "comment": "Constructs a new instance with an equality tolerance given by Property.DEFAULT.tolerance().",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "cern.colt.matrix.linalg.Algebra(double tolerance)",
    "name": "cern.colt.matrix.linalg.Algebra",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "tolerance"
      }
    ],
    "equivalence": {
      "member": "cern.colt.matrix.linalg.Algebra(double tolerance)",
      "comment": "Constructs a new instance with the given equality tolerance.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "clone()",
    "name": "clone",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object",
      "name": "java.lang.Object",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "clone()",
      "comment": "Returns a copy of the receiver. The attached property object is also copied. Hence, the property object of the copy is mutable.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "cond(cern.colt.matrix.DoubleMatrix2D A)",
    "name": "cond",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
          "name": "DoubleMatrix2D",
          "isArray": false
        },
        "name": "A"
      }
    ],
    "equivalence": {
      "member": "cond(cern.colt.matrix.DoubleMatrix2D A)",
      "comment": "Returns the condition of matrix A, which is the ratio of largest to smallest singular value.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "det(cern.colt.matrix.DoubleMatrix2D A)",
    "name": "det",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
          "name": "DoubleMatrix2D",
          "isArray": false
        },
        "name": "A"
      }
    ],
    "equivalence": {
      "member": "det(cern.colt.matrix.DoubleMatrix2D A)",
      "comment": "Returns the determinant of matrix A.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "hypot(double a, double b)",
    "name": "hypot",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "b"
      }
    ],
    "equivalence": {
      "member": "hypot(double a, double b)",
      "comment": "Returns sqrt(a^2 + b^2) without under/overflow.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "hypotFunction()",
    "name": "hypotFunction",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "cern.colt.function.DoubleDoubleFunction",
      "name": "cern.colt.function.DoubleDoubleFunction",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "hypotFunction()",
      "comment": "Returns sqrt(a^2 + b^2) without under/overflow.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "inverse(cern.colt.matrix.DoubleMatrix2D A)",
    "name": "inverse",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
      "name": "cern.colt.matrix.DoubleMatrix2D",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
          "name": "DoubleMatrix2D",
          "isArray": false
        },
        "name": "A"
      }
    ],
    "equivalence": {
      "member": "inverse(cern.colt.matrix.DoubleMatrix2D A)",
      "comment": "Returns the inverse or pseudo-inverse of matrix A.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "mult(cern.colt.matrix.DoubleMatrix1D x, cern.colt.matrix.DoubleMatrix1D y)",
    "name": "mult",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix1D",
          "name": "DoubleMatrix1D",
          "isArray": false
        },
        "name": "x"
      },
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix1D",
          "name": "DoubleMatrix1D",
          "isArray": false
        },
        "name": "y"
      }
    ],
    "equivalence": {
      "member": "mult(cern.colt.matrix.DoubleMatrix1D x, cern.colt.matrix.DoubleMatrix1D y)",
      "comment": "Inner product of two vectors; Sum(x[i] * y[i]). Also known as dot product. <br> Equivalent to x.zDotProduct(y).",
      "kind": "FreeText",
      "condition": "methodResultID==args[0].zDotProduct(args[1])"
    }
  },
  {
    "signature": "mult(cern.colt.matrix.DoubleMatrix2D A, cern.colt.matrix.DoubleMatrix1D y)",
    "name": "mult",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "cern.colt.matrix.DoubleMatrix1D",
      "name": "cern.colt.matrix.DoubleMatrix1D",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
          "name": "DoubleMatrix2D",
          "isArray": false
        },
        "name": "A"
      },
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix1D",
          "name": "DoubleMatrix1D",
          "isArray": false
        },
        "name": "y"
      }
    ],
    "equivalence": {
      "member": "mult(cern.colt.matrix.DoubleMatrix2D A, cern.colt.matrix.DoubleMatrix1D y)",
      "comment": "Linear algebraic matrix-vector multiplication; z = A * y. z[i] = Sum(A[i,j] * y[j]), i=0..A.rows()-1, j=0..y.size()-1.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "mult(cern.colt.matrix.DoubleMatrix2D A, cern.colt.matrix.DoubleMatrix2D B)",
    "name": "mult",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
      "name": "cern.colt.matrix.DoubleMatrix2D",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
          "name": "DoubleMatrix2D",
          "isArray": false
        },
        "name": "A"
      },
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
          "name": "DoubleMatrix2D",
          "isArray": false
        },
        "name": "B"
      }
    ],
    "equivalence": {
      "member": "mult(cern.colt.matrix.DoubleMatrix2D A, cern.colt.matrix.DoubleMatrix2D B)",
      "comment": "Linear algebraic matrix-matrix multiplication; C = A x B. C[i,j] = Sum(A[i,k] * B[k,j]), k=0..n-1. <br> Matrix shapes: A(m x n), B(n x p), C(m x p).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "multOuter(cern.colt.matrix.DoubleMatrix1D x, cern.colt.matrix.DoubleMatrix1D y, cern.colt.matrix.DoubleMatrix2D A)",
    "name": "multOuter",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
      "name": "cern.colt.matrix.DoubleMatrix2D",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix1D",
          "name": "DoubleMatrix1D",
          "isArray": false
        },
        "name": "x"
      },
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix1D",
          "name": "DoubleMatrix1D",
          "isArray": false
        },
        "name": "y"
      },
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
          "name": "DoubleMatrix2D",
          "isArray": false
        },
        "name": "A"
      }
    ],
    "equivalence": {
      "member": "multOuter(cern.colt.matrix.DoubleMatrix1D x, cern.colt.matrix.DoubleMatrix1D y, cern.colt.matrix.DoubleMatrix2D A)",
      "comment": "Outer product of two vectors; Sets A[i,j] = x[i] * y[j].",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "norm1(cern.colt.matrix.DoubleMatrix1D x)",
    "name": "norm1",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix1D",
          "name": "DoubleMatrix1D",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "equivalence": {
      "member": "norm1(cern.colt.matrix.DoubleMatrix1D x)",
      "comment": "Returns the one-norm of vector x, which is Sum(abs(x[i])).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "norm1(cern.colt.matrix.DoubleMatrix2D A)",
    "name": "norm1",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
          "name": "DoubleMatrix2D",
          "isArray": false
        },
        "name": "A"
      }
    ],
    "equivalence": {
      "member": "norm1(cern.colt.matrix.DoubleMatrix2D A)",
      "comment": "Returns the one-norm of matrix A, which is the maximum absolute column sum.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "norm2(cern.colt.matrix.DoubleMatrix1D x)",
    "name": "norm2",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix1D",
          "name": "DoubleMatrix1D",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "equivalence": {
      "member": "norm2(cern.colt.matrix.DoubleMatrix1D x)",
      "comment": "Returns the two-norm (aka euclidean norm) of vector x; equivalent to mult(x,x).",
      "kind": "FreeText",
      "condition": "methodResultID==(receiverObjectClone.mult(args[0],args[0]))"
    }
  },
  {
    "signature": "norm2(cern.colt.matrix.DoubleMatrix2D A)",
    "name": "norm2",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
          "name": "DoubleMatrix2D",
          "isArray": false
        },
        "name": "A"
      }
    ],
    "equivalence": {
      "member": "norm2(cern.colt.matrix.DoubleMatrix2D A)",
      "comment": "Returns the two-norm of matrix A, which is the maximum singular value; obtained from SVD.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "normF(cern.colt.matrix.DoubleMatrix2D A)",
    "name": "normF",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
          "name": "DoubleMatrix2D",
          "isArray": false
        },
        "name": "A"
      }
    ],
    "equivalence": {
      "member": "normF(cern.colt.matrix.DoubleMatrix2D A)",
      "comment": "Returns the Frobenius norm of matrix A, which is Sqrt(Sum(A[i,j]<sup>2</sup>)).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "normInfinity(cern.colt.matrix.DoubleMatrix1D x)",
    "name": "normInfinity",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix1D",
          "name": "DoubleMatrix1D",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "equivalence": {
      "member": "normInfinity(cern.colt.matrix.DoubleMatrix1D x)",
      "comment": "Returns the infinity norm of vector x, which is Max(abs(x[i])).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "normInfinity(cern.colt.matrix.DoubleMatrix2D A)",
    "name": "normInfinity",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
          "name": "DoubleMatrix2D",
          "isArray": false
        },
        "name": "A"
      }
    ],
    "equivalence": {
      "member": "normInfinity(cern.colt.matrix.DoubleMatrix2D A)",
      "comment": "Returns the infinity norm of matrix A, which is the maximum absolute row sum.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "permute(cern.colt.matrix.DoubleMatrix1D A, int[] indexes, double[] work)",
    "name": "permute",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "cern.colt.matrix.DoubleMatrix1D",
      "name": "cern.colt.matrix.DoubleMatrix1D",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix1D",
          "name": "DoubleMatrix1D",
          "isArray": false
        },
        "name": "A"
      },
      {
        "type": {
          "qualifiedName": "[I",
          "name": "int[]",
          "isArray": true
        },
        "name": "indexes"
      },
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "work"
      }
    ],
    "equivalence": {
      "member": "permute(cern.colt.matrix.DoubleMatrix1D A, int[] indexes, double[] work)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "permute(cern.colt.matrix.DoubleMatrix2D A, int[] rowIndexes, int[] columnIndexes)",
    "name": "permute",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
      "name": "cern.colt.matrix.DoubleMatrix2D",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
          "name": "DoubleMatrix2D",
          "isArray": false
        },
        "name": "A"
      },
      {
        "type": {
          "qualifiedName": "[I",
          "name": "int[]",
          "isArray": true
        },
        "name": "rowIndexes"
      },
      {
        "type": {
          "qualifiedName": "[I",
          "name": "int[]",
          "isArray": true
        },
        "name": "columnIndexes"
      }
    ],
    "equivalence": {
      "member": "permute(cern.colt.matrix.DoubleMatrix2D A, int[] rowIndexes, int[] columnIndexes)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "permuteColumns(cern.colt.matrix.DoubleMatrix2D A, int[] indexes, int[] work)",
    "name": "permuteColumns",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
      "name": "cern.colt.matrix.DoubleMatrix2D",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
          "name": "DoubleMatrix2D",
          "isArray": false
        },
        "name": "A"
      },
      {
        "type": {
          "qualifiedName": "[I",
          "name": "int[]",
          "isArray": true
        },
        "name": "indexes"
      },
      {
        "type": {
          "qualifiedName": "[I",
          "name": "int[]",
          "isArray": true
        },
        "name": "work"
      }
    ],
    "equivalence": {
      "member": "permuteColumns(cern.colt.matrix.DoubleMatrix2D A, int[] indexes, int[] work)",
      "comment": "Modifies the given matrix <tt>A</tt> such that it's columns are permuted as specified; Useful for pivoting. Column <tt>A[i]</tt> will go into column <tt>A[indexes[i]]</tt>. Equivalent to <tt>permuteRows(transpose(A), indexes, work)</tt>.",
      "kind": "FreeText",
      "condition": "methodResultID.equals(receiverObjectID.permuteRows(receiverObjectID.transpose(args[0]), args[1], args[2]))"
    }
  },
  {
    "signature": "permuteRows(cern.colt.matrix.DoubleMatrix2D A, int[] indexes, int[] work)",
    "name": "permuteRows",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
      "name": "cern.colt.matrix.DoubleMatrix2D",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
          "name": "DoubleMatrix2D",
          "isArray": false
        },
        "name": "A"
      },
      {
        "type": {
          "qualifiedName": "[I",
          "name": "int[]",
          "isArray": true
        },
        "name": "indexes"
      },
      {
        "type": {
          "qualifiedName": "[I",
          "name": "int[]",
          "isArray": true
        },
        "name": "work"
      }
    ],
    "equivalence": {
      "member": "permuteRows(cern.colt.matrix.DoubleMatrix2D A, int[] indexes, int[] work)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "pow(cern.colt.matrix.DoubleMatrix2D A, int p)",
    "name": "pow",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
      "name": "cern.colt.matrix.DoubleMatrix2D",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
          "name": "DoubleMatrix2D",
          "isArray": false
        },
        "name": "A"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "p"
      }
    ],
    "equivalence": {
      "member": "pow(cern.colt.matrix.DoubleMatrix2D A, int p)",
      "comment": "Linear algebraic matrix power; B = A<sup>k</sup> <==> B = A*A*...*A.  <li><tt>p >= 1: B = A*A*...*A</tt>.</li> <li><tt>p == 0: B = identity matrix</tt>.</li> <li><tt>p < 0: B = pow(inverse(A),-p)</tt>.</li>  Implementation: Based on logarithms of 2, memory usage minimized.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "property()",
    "name": "property",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "cern.colt.matrix.linalg.Property",
      "name": "cern.colt.matrix.linalg.Property",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "property()",
      "comment": "Returns the property object attached to this Algebra, defining tolerance.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "rank(cern.colt.matrix.DoubleMatrix2D A)",
    "name": "rank",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
          "name": "DoubleMatrix2D",
          "isArray": false
        },
        "name": "A"
      }
    ],
    "equivalence": {
      "member": "rank(cern.colt.matrix.DoubleMatrix2D A)",
      "comment": "Returns the effective numerical rank of matrix A, obtained from Singular Value Decomposition.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setProperty(cern.colt.matrix.linalg.Property property)",
    "name": "setProperty",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.linalg.Property",
          "name": "Property",
          "isArray": false
        },
        "name": "property"
      }
    ],
    "equivalence": {
      "member": "setProperty(cern.colt.matrix.linalg.Property property)",
      "comment": "Attaches the given property object to this Algebra, defining tolerance.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "solve(cern.colt.matrix.DoubleMatrix2D A, cern.colt.matrix.DoubleMatrix2D B)",
    "name": "solve",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
      "name": "cern.colt.matrix.DoubleMatrix2D",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
          "name": "DoubleMatrix2D",
          "isArray": false
        },
        "name": "A"
      },
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
          "name": "DoubleMatrix2D",
          "isArray": false
        },
        "name": "B"
      }
    ],
    "equivalence": {
      "member": "solve(cern.colt.matrix.DoubleMatrix2D A, cern.colt.matrix.DoubleMatrix2D B)",
      "comment": "Solves A*X = B.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "solveTranspose(cern.colt.matrix.DoubleMatrix2D A, cern.colt.matrix.DoubleMatrix2D B)",
    "name": "solveTranspose",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
      "name": "cern.colt.matrix.DoubleMatrix2D",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
          "name": "DoubleMatrix2D",
          "isArray": false
        },
        "name": "A"
      },
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
          "name": "DoubleMatrix2D",
          "isArray": false
        },
        "name": "B"
      }
    ],
    "equivalence": {
      "member": "solveTranspose(cern.colt.matrix.DoubleMatrix2D A, cern.colt.matrix.DoubleMatrix2D B)",
      "comment": "Solves X*A = B, which is also A'*X' = B'.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "subMatrix(cern.colt.matrix.DoubleMatrix2D A, int fromRow, int toRow, int fromColumn, int toColumn)",
    "name": "subMatrix",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
      "name": "cern.colt.matrix.DoubleMatrix2D",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
          "name": "DoubleMatrix2D",
          "isArray": false
        },
        "name": "A"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "fromRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "toRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "fromColumn"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "toColumn"
      }
    ],
    "equivalence": {
      "member": "subMatrix(cern.colt.matrix.DoubleMatrix2D A, int fromRow, int toRow, int fromColumn, int toColumn)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toString(cern.colt.matrix.DoubleMatrix2D matrix)",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
          "name": "DoubleMatrix2D",
          "isArray": false
        },
        "name": "matrix"
      }
    ],
    "equivalence": {
      "member": "toString(cern.colt.matrix.DoubleMatrix2D matrix)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toVerboseString(cern.colt.matrix.DoubleMatrix2D matrix)",
    "name": "toVerboseString",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
          "name": "DoubleMatrix2D",
          "isArray": false
        },
        "name": "matrix"
      }
    ],
    "equivalence": {
      "member": "toVerboseString(cern.colt.matrix.DoubleMatrix2D matrix)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "trace(cern.colt.matrix.DoubleMatrix2D A)",
    "name": "trace",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
          "name": "DoubleMatrix2D",
          "isArray": false
        },
        "name": "A"
      }
    ],
    "equivalence": {
      "member": "trace(cern.colt.matrix.DoubleMatrix2D A)",
      "comment": "Returns the sum of the diagonal elements of matrix A; Sum(A[i,i]).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "transpose(cern.colt.matrix.DoubleMatrix2D A)",
    "name": "transpose",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
      "name": "cern.colt.matrix.DoubleMatrix2D",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
          "name": "DoubleMatrix2D",
          "isArray": false
        },
        "name": "A"
      }
    ],
    "equivalence": {
      "member": "transpose(cern.colt.matrix.DoubleMatrix2D A)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "trapezoidalLower(cern.colt.matrix.DoubleMatrix2D A)",
    "name": "trapezoidalLower",
    "containingClass": {
      "qualifiedName": "cern.colt.matrix.linalg.Algebra",
      "name": "Algebra",
      "isArray": false
    },
    "targetClass": "cern.colt.matrix.linalg.Algebra",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
      "name": "cern.colt.matrix.DoubleMatrix2D",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "cern.colt.matrix.DoubleMatrix2D",
          "name": "DoubleMatrix2D",
          "isArray": false
        },
        "name": "A"
      }
    ],
    "equivalence": {
      "member": "trapezoidalLower(cern.colt.matrix.DoubleMatrix2D A)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  }
]