[
  {
    "signature": "createCollection()",
    "name": "createCollection",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.LinkedHashMultimap",
      "name": "LinkedHashMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.LinkedHashMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set<V>",
      "name": "java.util.Set<V>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "createCollection()",
      "comment": "{@inheritDoc} Creates an empty LinkedHashSet for a collection of values for one key.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "values()",
    "name": "values",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.LinkedHashMultimap",
      "name": "LinkedHashMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.LinkedHashMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Collection<V>",
      "name": "java.util.Collection<V>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "values()",
      "comment": "Returns a collection of all values in the multimap. Changes to the returned collection will update the underlying multimap, and vice versa. The iterator generated by the returned collection traverses the values in the order they were added to the multimap.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "replaceValues(K key, java.lang.Iterable<? extends V> values)",
    "name": "replaceValues",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.LinkedHashMultimap",
      "name": "LinkedHashMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.LinkedHashMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set<V>",
      "name": "java.util.Set<V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key",
        "nullable": true
      },
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "values"
      }
    ],
    "equivalence": {
      "member": "replaceValues(K key, java.lang.Iterable<? extends V> values)",
      "comment": "{@inheritDoc} If values is not empty and the multimap already contains a mapping for key, the keySet() ordering is unchanged. However, the provided values always come last in the #entries() and #values() iteration orderings.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "valueIterator()",
    "name": "valueIterator",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.LinkedHashMultimap",
      "name": "LinkedHashMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.LinkedHashMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator<V>",
      "name": "java.util.Iterator<V>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "valueIterator()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "entries()",
    "name": "entries",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.LinkedHashMultimap",
      "name": "LinkedHashMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.LinkedHashMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set<java.util.Map$Entry<K, V>>",
      "name": "java.util.Set<java.util.Map$Entry<K, V>>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "entries()",
      "comment": "Returns a set of all key-value pairs. Changes to the returned set will update the underlying multimap, and vice versa. The entries set does not support the add or addAll operations. The iterator generated by the returned set traverses the entries in the order they were added to the multimap. Each entry is an immutable snapshot of a key-value mapping in the multimap, taken at the time the entry is returned by a method call to the collection or its iterator.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "clear()",
    "name": "clear",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.LinkedHashMultimap",
      "name": "LinkedHashMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.LinkedHashMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "clear()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "create()",
    "name": "create",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.LinkedHashMultimap",
      "name": "LinkedHashMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.LinkedHashMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.LinkedHashMultimap<K, V>",
      "name": "com.google.common.collect.LinkedHashMultimap<K, V>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "create()",
      "comment": "Creates a new, empty LinkedHashMultimap with the default initial capacities.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "create(int expectedKeys, int expectedValuesPerKey)",
    "name": "create",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.LinkedHashMultimap",
      "name": "LinkedHashMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.LinkedHashMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.LinkedHashMultimap<K, V>",
      "name": "com.google.common.collect.LinkedHashMultimap<K, V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "expectedKeys"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "expectedValuesPerKey"
      }
    ],
    "equivalence": {
      "member": "create(int expectedKeys, int expectedValuesPerKey)",
      "comment": "Constructs an empty LinkedHashMultimap with enough capacity to hold the specified numbers of keys and values without rehashing.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "createCollection(K key)",
    "name": "createCollection",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.LinkedHashMultimap",
      "name": "LinkedHashMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.LinkedHashMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Collection<V>",
      "name": "java.util.Collection<V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "equivalence": {
      "member": "createCollection(K key)",
      "comment": "{@inheritDoc} Creates a decorated insertion-ordered set that also keeps track of the order in which key-value pairs are added to the multimap.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "create(com.google.common.collect.Multimap<? extends K, ? extends V> multimap)",
    "name": "create",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.LinkedHashMultimap",
      "name": "LinkedHashMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.LinkedHashMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.LinkedHashMultimap<K, V>",
      "name": "com.google.common.collect.LinkedHashMultimap<K, V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.common.collect.Multimap",
          "name": "Multimap",
          "isArray": false
        },
        "name": "multimap"
      }
    ],
    "equivalence": {
      "member": "create(com.google.common.collect.Multimap<? extends K, ? extends V> multimap)",
      "comment": "Constructs a LinkedHashMultimap with the same mappings as the specified multimap. If a key-value mapping appears multiple times in the input multimap, it only appears once in the constructed multimap. The new multimap has the same Multimap#entries() iteration order as the input multimap, except for excluding duplicate mappings.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "entryIterator()",
    "name": "entryIterator",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.LinkedHashMultimap",
      "name": "LinkedHashMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.LinkedHashMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator<java.util.Map$Entry<K, V>>",
      "name": "java.util.Iterator<java.util.Map$Entry<K, V>>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "entryIterator()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  }
]