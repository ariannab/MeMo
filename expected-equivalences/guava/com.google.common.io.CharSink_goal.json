[
  {
    "signature": "write(java.lang.CharSequence charSequence)",
    "name": "write",
    "containingClass": {
      "qualifiedName": "com.google.common.io.CharSink",
      "name": "CharSink",
      "isArray": false
    },
    "targetClass": "com.google.common.io.CharSink",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.CharSequence",
          "name": "CharSequence",
          "isArray": false
        },
        "name": "charSequence"
      }
    ],
    "equivalence": {
      "comment": "Writes the given character sequence to this sink.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "openStream()",
    "name": "openStream",
    "containingClass": {
      "qualifiedName": "com.google.common.io.CharSink",
      "name": "CharSink",
      "isArray": false
    },
    "targetClass": "com.google.common.io.CharSink",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.io.Writer",
      "name": "java.io.Writer",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "Opens a new Writer for writing to this sink. This method should return a new, independent writer each time it is called. <p>The caller is responsible for ensuring that the returned writer is closed.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "writeLines(java.lang.Iterable<? extends java.lang.CharSequence> lines, java.lang.String lineSeparator)",
    "name": "writeLines",
    "containingClass": {
      "qualifiedName": "com.google.common.io.CharSink",
      "name": "CharSink",
      "isArray": false
    },
    "targetClass": "com.google.common.io.CharSink",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "lines"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "lineSeparator"
      }
    ],
    "equivalence": {
      "comment": "Writes the given lines of text to this sink with each line (including the last) terminated with the given line separator.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "com.google.common.io.CharSink()",
    "name": "com.google.common.io.CharSink",
    "containingClass": {
      "qualifiedName": "com.google.common.io.CharSink",
      "name": "CharSink",
      "isArray": false
    },
    "targetClass": "com.google.common.io.CharSink",
    "isVarArgs": false,
    "parameters": [],
    "equivalence": {
      "comment": "Constructor for use by subclasses.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "openBufferedStream()",
    "name": "openBufferedStream",
    "containingClass": {
      "qualifiedName": "com.google.common.io.CharSink",
      "name": "CharSink",
      "isArray": false
    },
    "targetClass": "com.google.common.io.CharSink",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.io.Writer",
      "name": "java.io.Writer",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "Opens a new buffered Writer for writing to this sink. The returned stream is not required to be a BufferedWriter in order to allow implementations to simply delegate to openStream() when the stream returned by that method does not benefit from additional buffering. This method should return a new, independent writer each time it is called. <p>The caller is responsible for ensuring that the returned writer is closed.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "writeLines(java.lang.Iterable<? extends java.lang.CharSequence> lines)",
    "name": "writeLines",
    "containingClass": {
      "qualifiedName": "com.google.common.io.CharSink",
      "name": "CharSink",
      "isArray": false
    },
    "targetClass": "com.google.common.io.CharSink",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "lines"
      }
    ],
    "equivalence": {
      "comment": "Writes the given lines of text to this sink with each line (including the last) terminated with the operating system's default line separator. This method is equivalent to writeLines(lines, System.getProperty(\"line.separator\")).",
      "kind": "FreeText",
      "condition": "methodResultID.equals(receiverObjectClone.writeLines(args[0], System.getProperty(\"line.separator\")))"
    }
  },
  {
    "signature": "writeFrom(java.lang.Readable readable)",
    "name": "writeFrom",
    "containingClass": {
      "qualifiedName": "com.google.common.io.CharSink",
      "name": "CharSink",
      "isArray": false
    },
    "targetClass": "com.google.common.io.CharSink",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Readable",
          "name": "Readable",
          "isArray": false
        },
        "name": "readable"
      }
    ],
    "equivalence": {
      "comment": "Writes all the text from the given Readable (such as a Reader) to this sink. Does not close readable if it is Closeable.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]